# Javascript Node CircleCI 2.0 configuration file
defaults: &defaults
  docker:
    - image: circleci/node:8.11
  working_directory: ~/repo
version: 2
jobs:
  checkout_code:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}-
            - source-
      - checkout
      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - "~/repo"

  install_dependencies:
    <<: *defaults
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          keys:
            - depens-{{ checksum "package.json" }}
            - depens-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: depens-{{ checksum "package.json" }}
  test:
    <<: *defaults
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: depens-{{ checksum "package.json" }}
      - run: npm run test

  #build:
  #  <<: *defaults
  #  steps:
  #    - restore_cache:
  #        key: source-{{ .Branch }}-{{ .Revision }}
  #    - restore_cache:
  #        key: depens-{{ checksum "package.json" }}

  #    - run: npm run build

  #    - persist_to_workspace:
  #        root: ~/repo
  #        paths:
  #          - build
  #          - package.json
  #deploy:
  #  <<: *defaults
  #  steps:
  #    - attach_workspace:
  #        at: ~/repo
  #    - store_artifacts:
  #        path: ~/repo/build
  #        destination: prod-dist
  #    - run:
  #        name: deploy app to sftp
  #        command: |
  #          scp -o StrictHostKeyChecking=no ./prod-dist $SSH_USERNAME@$SSH_HOST:/customers/1/0/8/mobtimer.com/httpd.www/test
workflows:
  version: 2
  test_build_and_deploy:
    jobs:
      - checkout_code
      - install_dependencies:
          requires:
            - checkout_code
      - test:
          requires:
            - install_dependencies
      #- build:
      #    requires:
      #      - install_dependencies
      #- deploy:
      #    requires:
      #      - build
      #      - test
